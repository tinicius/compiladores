from enum import Enum, auto

class TokenType(Enum):
    VARIABLE = auto()
    RESERVED_WORD_PROGRAM = auto()
    RESERVED_WORD_BEGIN = auto()
    RESERVED_WORD_END = auto()
    RESERVED_WORD_VAR = auto()
    RESERVED_WORD_INTEGER = auto()
    RESERVED_WORD_REAL = auto()
    RESERVED_WORD_STRING = auto()
    RESERVED_WORD_FOR = auto()
    RESERVED_WORD_TO = auto()
    RESERVED_WORD_WHILE = auto()
    RESERVED_WORD_DO = auto()
    RESERVED_WORD_BREAK = auto()
    RESERVED_WORD_CONTINUE = auto()
    RESERVED_WORD_IF = auto()
    RESERVED_WORD_ELSE = auto()
    RESERVED_WORD_THEN = auto()
    RESERVED_WORD_WRITE = auto()
    RESERVED_WORD_WRITELN = auto()
    RESERVED_WORD_READ = auto()
    RESERVED_WORD_READLN = auto()
    STRING = auto()
    OPEN_PARENTHESES = auto()
    CLOSE_PARENTHESES = auto()
    SEMICOLON = auto()
    COLON = auto()
    COMMA = auto()
    DOT = auto()
    EOF = auto()
    OCTAL = auto()
    HEXADECIMAL = auto()
    FLOAT = auto()
    DECIMAL = auto()
    LINE_COMMENT = auto()
    BLOCK_COMMENT = auto()
    # operadores aritméticos
    OPERATOR_PLUS = auto()
    OPERATOR_MINUS = auto()
    OPERATOR_MULTIPLY = auto()
    OPERATOR_DIVIDE = auto()
    OPERATOR_MOD = auto()
    OPERATOR_INTEGER_DIVIDER = auto()
    # operadores lógicos
    OPERATOR_AND = auto()
    OPERATOR_OR = auto()
    OPERATOR_NOT = auto()
    # operadores relacionais
    OPERATOR_EQUAL = auto()
    OPERATOR_NOT_EQUAL = auto()
    OPERATOR_LESS = auto()
    OPERATOR_LESS_EQUAL = auto()
    OPERATOR_GREATER = auto()
    OPERATOR_GREATER_EQUAL = auto()
    # operador de atribuição
    OPERATOR_ASSIGN = auto()
    